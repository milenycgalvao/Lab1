


ARM Macro Assembler    Page 1 


    1 00000000         ; utils.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Código que apresenta algumas funcionalidades:
    4 00000000         ; - Altera a frequência do barramento usando o PLL
    5 00000000         ; - Configura o Systick para utilizar delays precisos
    6 00000000         
    7 00000000         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
    8 00000000         ; PLL
    9 00000000         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
   10 00000000         ; A frequência do barramento será 80MHz
   11 00000000         ; Representa o divisor para inicializar o PLL para a fre
                       quência desejada
   12 00000000         ; Frequência do barramento é 480MHz/(PSYSDIV+1) = 480MHz
                       /(5+1) = 80 MHz
   13 00000000 00000005 
                       PSYSDIV EQU              5
   14 00000000         
   15 00000000 400FE050 
                       SYSCTL_RIS_R
                               EQU              0x400FE050
   16 00000000 00000100 
                       SYSCTL_RIS_MOSCPUPRIS
                               EQU              0x00000100  ; MOSC Power Up Raw
                                                             Interrupt Status
   17 00000000 400FE07C 
                       SYSCTL_MOSCCTL_R
                               EQU              0x400FE07C
   18 00000000 00000008 
                       SYSCTL_MOSCCTL_PWRDN
                               EQU              0x00000008  ; Power Down
   19 00000000 00000004 
                       SYSCTL_MOSCCTL_NOXTAL
                               EQU              0x00000004  ; No Crystal Connec
                                                            ted
   20 00000000 400FE0B0 
                       SYSCTL_RSCLKCFG_R
                               EQU              0x400FE0B0
   21 00000000 80000000 
                       SYSCTL_RSCLKCFG_MEMTIMU
                               EQU              0x80000000  ; Memory Timing Reg
                                                            ister Update
   22 00000000 40000000 
                       SYSCTL_RSCLKCFG_NEWFREQ
                               EQU              0x40000000  ; New PLLFREQ Accep
                                                            t
   23 00000000 10000000 
                       SYSCTL_RSCLKCFG_USEPLL
                               EQU              0x10000000  ; Use PLL
   24 00000000 0F000000 
                       SYSCTL_RSCLKCFG_PLLSRC_M
                               EQU              0x0F000000  ; PLL Source
   25 00000000 03000000 
                       SYSCTL_RSCLKCFG_PLLSRC_MOSC
                               EQU              0x03000000  ; MOSC is the PLL i
                                                            nput clock source



ARM Macro Assembler    Page 2 


   26 00000000 00F00000 
                       SYSCTL_RSCLKCFG_OSCSRC_M
                               EQU              0x00F00000  ; Oscillator Source
                                                            
   27 00000000 00300000 
                       SYSCTL_RSCLKCFG_OSCSRC_MOSC
                               EQU              0x00300000  ; MOSC is oscillato
                                                            r source
   28 00000000 000003FF 
                       SYSCTL_RSCLKCFG_PSYSDIV_M
                               EQU              0x000003FF  ; PLL System Clock 
                                                            Divisor
   29 00000000 400FE0C0 
                       SYSCTL_MEMTIM0_R
                               EQU              0x400FE0C0
   30 00000000 400FE144 
                       SYSCTL_DSCLKCFG_R
                               EQU              0x400FE144
   31 00000000 00F00000 
                       SYSCTL_DSCLKCFG_DSOSCSRC_M
                               EQU              0x00F00000  ; Deep Sleep Oscill
                                                            ator Source
   32 00000000 00300000 
                       SYSCTL_DSCLKCFG_DSOSCSRC_MOSC
                               EQU              0x00300000  ; MOSC
   33 00000000 400FE160 
                       SYSCTL_PLLFREQ0_R
                               EQU              0x400FE160
   34 00000000 00800000 
                       SYSCTL_PLLFREQ0_PLLPWR
                               EQU              0x00800000  ; PLL Power
   35 00000000 000FFC00 
                       SYSCTL_PLLFREQ0_MFRAC_M
                               EQU              0x000FFC00  ; PLL M Fractional 
                                                            Value
   36 00000000 000003FF 
                       SYSCTL_PLLFREQ0_MINT_M
                               EQU              0x000003FF  ; PLL M Integer Val
                                                            ue
   37 00000000 0000000A 
                       SYSCTL_PLLFREQ0_MFRAC_S
                               EQU              10
   38 00000000 00000000 
                       SYSCTL_PLLFREQ0_MINT_S
                               EQU              0
   39 00000000 400FE164 
                       SYSCTL_PLLFREQ1_R
                               EQU              0x400FE164
   40 00000000 00001F00 
                       SYSCTL_PLLFREQ1_Q_M
                               EQU              0x00001F00  ; PLL Q Value
   41 00000000 0000001F 
                       SYSCTL_PLLFREQ1_N_M
                               EQU              0x0000001F  ; PLL N Value
   42 00000000 00000008 
                       SYSCTL_PLLFREQ1_Q_S
                               EQU              8
   43 00000000 00000000 
                       SYSCTL_PLLFREQ1_N_S



ARM Macro Assembler    Page 3 


                               EQU              0
   44 00000000 400FE168 
                       SYSCTL_PLLSTAT_R
                               EQU              0x400FE168
   45 00000000 00000001 
                       SYSCTL_PLLSTAT_LOCK
                               EQU              0x00000001  ; PLL Lock
   46 00000000         
   47 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   48 00000000                 THUMB
   49 00000000                 EXPORT           PLL_Init
   50 00000000         
   51 00000000         ;------------PLL_Init------------
   52 00000000         ; Configura o sistema para utilizar o clock do PLL
   53 00000000         ; Entrada: Nenhum
   54 00000000         ; Saída: Nenhum
   55 00000000         ; Modifica: R0, R1, R2, R3
   56 00000000         PLL_Init
   57 00000000         ; Capítulo 5 do Datasheet
   58 00000000         ; 1) Depois que a configuração for pronta, o PIOSC provê
                        o clock do sistema. Este,
   59 00000000         ;    passo garante que se a função já tenha sido chamada
                        antes, o sistema desabilite
   60 00000000         ;    o clock do PLL antes de configurá-lo novamente.
   61 00000000 495C            LDR              R1, =SYSCTL_RSCLKCFG_R ; R1 = S
                                                            YSCTL_RSCLKCFG_R (p
                                                            onteiro)
   62 00000002 6808            LDR              R0, [R1]    ; R0 = [R1] (value)
                                                            
   63 00000004 F020 5080       BIC              R0, R0, #SYSCTL_RSCLKCFG_USEPLL
 
                                                            ; R0 = R0&~SYSCTL_R
                                                            SCLKCFG_USEPLL (lim
                                                            par o bit USEPLL bi
                                                            t para não clockar 
                                                            pelo PLL)
   64 00000008 6008            STR              R0, [R1]    ; [R1] = R0
   65 0000000A         ; 2) Ligar o MOSC limpando o bit NOXTAL bit no registrad
                       or SYSCTL_MOSCCTL_R.
   66 0000000A         ; 3) Como o modo cristal é requerido, limpar o bit de PW
                       RDN. O datasheet pede 
   67 0000000A         ;     para fazer estas duas operações em um único acesso
                        de escrita ao SYSCTL_MOSCCTL_R.
   68 0000000A 495B            LDR              R1, =SYSCTL_MOSCCTL_R ; R1 = SY
                                                            SCTL_MOSCCTL_R (poi
                                                            nter)
   69 0000000C 6808            LDR              R0, [R1]    ; R0 = [R1] (value)
                                                            
   70 0000000E F020 0004       BIC              R0, R0, #SYSCTL_MOSCCTL_NOXTAL 
                                                            ; R0 = R0&~SYSCTL_M
                                                            OSCCTL_NOXTAL (limp
                                                            a o bit NOXTAL para
                                                             usar o cristal ext
                                                            erno de 25 MHz)
   71 00000012 F020 0008       BIC              R0, R0, #SYSCTL_MOSCCTL_PWRDN ;
                                                             R0 = R0&~SYSCTL_MO
                                                            SCCTL_PWRDN (limpa 
                                                            o bit PWRDN para li



ARM Macro Assembler    Page 4 


                                                            gar o oscilador pri
                                                            ncipal)
   72 00000016 6008            STR              R0, [R1]    ; [R1] = R0 (ambas 
                                                            alterações em um ún
                                                            ico acesso)
   73 00000018         ;    Esperar pelo bit MOSCPUPRIS ser setado no registrad
                       or SYSCTL_RIS_R register, indicando
   74 00000018         ;    que o cristal modo MOSC está pronto
   75 00000018 4958            LDR              R1, =SYSCTL_RIS_R ; R1 = SYSCTL
                                                            _RIS_R (pointer)
   76 0000001A         PLL_Init_step3loop
   77 0000001A 6808            LDR              R0, [R1]    ; R0 = [R1] (value)
                                                            
   78 0000001C F410 7080       ANDS             R0, R0, #SYSCTL_RIS_MOSCPUPRIS 
                                                            ; R0 = R0&SYSCTL_RI
                                                            S_MOSCPUPRIS
   79 00000020 D0FB            BEQ              PLL_Init_step3loop ; if(R0 == 0
                                                            ), keep polling
   80 00000022         
   81 00000022         ; 4) Setar os campos OSCSRC e PLLSRC para 0x3 no registr
                       ador SYSCTL_RSCLKCFG_R
   82 00000022         ;    no offset 0x0B0.
   83 00000022 4954            LDR              R1, =SYSCTL_RSCLKCFG_R ; R1 = S
                                                            YSCTL_RSCLKCFG_R (p
                                                            ointer)
   84 00000024 6808            LDR              R0, [R1]    ; R0 = [R1] (value)
                                                            
   85 00000026 F420 0070       BIC              R0, R0, #SYSCTL_RSCLKCFG_OSCSRC
_M 
                                                            ; R0 = R0&~SYSCTL_R
                                                            SCLKCFG_OSCSRC_M (l
                                                            impar o campo syste
                                                            m run/sleep clock s
                                                            ource)
   86 0000002A F500 1040       ADD              R0, R0, #SYSCTL_RSCLKCFG_OSCSRC
_MOSC 
                                                            ; R0 = R0 + SYSCTL_
                                                            RSCLKCFG_OSCSRC_MOS
                                                            C (configurar para 
                                                            temporariamente obt
                                                            er o clock do oscil
                                                            ador de 25MHz princ
                                                            ipal)
   87 0000002E F020 6070       BIC              R0, R0, #SYSCTL_RSCLKCFG_PLLSRC
_M 
                                                            ; R0 = R0&~SYSCTL_R
                                                            SCLKCFG_PLLSRC_M (l
                                                            impar o campo PLL c
                                                            lock source)
   88 00000032 F100 7040       ADD              R0, R0, #SYSCTL_RSCLKCFG_PLLSRC
_MOSC 
                                                            ; R0 = R0 + SYSCTL_
                                                            RSCLKCFG_PLLSRC_MOS
                                                            C (configurar para 
                                                            o clock do PLL do o
                                                            scilador principal)
                                                            
   89 00000036 6008            STR              R0, [R1]    ; [R1] = R0
   90 00000038         ; 5) Se a aplicação também necessita que o MOSC seja a f



ARM Macro Assembler    Page 5 


                       onte de clock para deep-sleep
   91 00000038         ;    então programar o campo DSOSCSRC no registrador SYS
                       CTL_DSCLKCFG_R para 0x3.
   92 00000038 4951            LDR              R1, =SYSCTL_DSCLKCFG_R ; R1 = S
                                                            YSCTL_DSCLKCFG_R (p
                                                            ointer)
   93 0000003A 6808            LDR              R0, [R1]    ; R0 = [R1] (value)
                                                            
   94 0000003C F420 0070       BIC              R0, R0, #SYSCTL_DSCLKCFG_DSOSCS
RC_M 
                                                            ; R0 = R0&~SYSCTL_D
                                                            SCLKCFG_DSOSCSRC_M 
                                                            (clear system deep-
                                                            sleep clock source 
                                                            field)
   95 00000040 F500 1040       ADD              R0, R0, #SYSCTL_DSCLKCFG_DSOSCS
RC_MOSC 
                                                            ; R0 = R0 + SYSCTL_
                                                            DSCLKCFG_DSOSCSRC_M
                                                            OSC (configure to g
                                                            et deep-sleep clock
                                                             from main oscillat
                                                            or)
   96 00000044 6008            STR              R0, [R1]    ; [R1] = R0
   97 00000046         ; 6) Escrever os registradores SYSCTL_PLLFREQ0_R e SYSCT
                       L_PLLFREQ1_R com os valores de
   98 00000046         ;    Q, N, MINT, e MFRAC para configurar as configuraçõe
                       s desejadas da frequência de VCO.
   99 00000046         ;    ************
  100 00000046         ;    fVC0 = (fXTAL/(Q + 1)/(N + 1))*(MINT + (MFRAC/1,024
                       ))
  101 00000046         ;    fVCO = 480,000,000 Hz (arbitrary, but presumably as
                        small as needed)
  102 00000046         ;    Para uma frequência que não seja um divisor inteiro
                        de 480 MHz, mudar esta seção
  103 00000046 017D7840 
                       FXTAL   EQU              25000000    ; fixa, o cristal e
                                                            stá soldado no Laun
                                                            chpad
  104 00000046 00000000 
                       Q       EQU              0
  105 00000046 00000004 
                       N       EQU              4           ; escolhido para se
                                                            r a frequência de r
                                                            eferência entre 4 e
                                                             30 MHz
  106 00000046 00000060 
                       MINT    EQU              96          ; 480,000,000 = (25
                                                            ,000,000/(0 + 1)/(4
                                                             + 1))*(96 + (0/1,0
                                                            24))
  107 00000046 00000000 
                       MFRAC   EQU              0           ; zero para reduzir
                                                             o jitter
  108 00000046         ;    SysClk = fVCO / (PSYSDIV + 1)
  109 00000046 04C4B400 
                       SYSCLK  EQU              (FXTAL/(Q+1)/(N+1))*(MINT+MFRAC
/1024)/(PSYSDIV+1)
  110 00000046 494F            LDR              R1, =SYSCTL_PLLFREQ0_R ; R1 = S



ARM Macro Assembler    Page 6 


                                                            YSCTL_PLLFREQ0_R (p
                                                            onteiro)
  111 00000048 6808            LDR              R0, [R1]    ; R0 = [R1] (valor)
                                                            
  112 0000004A 4B4F            LDR              R3, =SYSCTL_PLLFREQ0_MFRAC_M ; 
                                                            R3 = SYSCTL_PLLFREQ
                                                            0_MFRAC_M (máscar)
  113 0000004C EA20 0003       BIC              R0, R0, R3  ; R0 = R0&~SYSCTL_P
                                                            LLFREQ0_MFRAC_M (li
                                                            mpar o campo MFRAC)
                                                            
  114 00000050 F04F 0300       LDR              R3, =(MFRAC<<SYSCTL_PLLFREQ0_MF
RAC_S) 
                                                            ; R3 = (MFRAC<<SYSC
                                                            TL_PLLFREQ0_MFRAC_S
                                                            ) (valor deslocado)
                                                            
  115 00000054 4418            ADD              R0, R0, R3  ; R0 = R0 + (MFRAC<
                                                            <SYSCTL_PLLFREQ0_MF
                                                            RAC_S) (configurar 
                                                            MFRAC como definido
                                                             acima)
  116 00000056 F240 33FF       LDR              R3, =SYSCTL_PLLFREQ0_MINT_M ; R
                                                            3 = SYSCTL_PLLFREQ0
                                                            _MINT_M (máscara)
  117 0000005A EA20 0003       BIC              R0, R0, R3  ; R0 = R0&~SYSCTL_P
                                                            LLFREQ0_MINT_M (lim
                                                            par o campo MINT)
  118 0000005E F100 0060       ADD              R0, R0, #(MINT<<SYSCTL_PLLFREQ0
_MINT_S) 
                                                            ; R0 = R0 + (MINT<<
                                                            SYSCTL_PLLFREQ0_MIN
                                                            T_S) (configurar MI
                                                            NT como definido ac
                                                            ima)
  119 00000062 6008            STR              R0, [R1]    ; [R1] = R0 (MFRAC 
                                                            e MINT alteraram ma
                                                            s não estão fixados
                                                             ainda)
  120 00000064 4949            LDR              R1, =SYSCTL_PLLFREQ1_R ; R1 = S
                                                            YSCTL_PLLFREQ1_R (p
                                                            onteiro)
  121 00000066 6808            LDR              R0, [R1]    ; R0 = [R1] (value)
                                                            
  122 00000068 F420 50F8       BIC              R0, R0, #SYSCTL_PLLFREQ1_Q_M ; 
                                                            R0 = R0&~SYSCTL_PLL
                                                            FREQ1_Q_M (limpar o
                                                             campo Q)
  123 0000006C F100 0000       ADD              R0, R0, #(Q<<SYSCTL_PLLFREQ1_Q_
S) 
                                                            ; R0 = R0 + (Q<<SYS
                                                            CTL_PLLFREQ1_Q_S) (
                                                            configurar Q como d
                                                            efinido acima)
  124 00000070 F020 001F       BIC              R0, R0, #SYSCTL_PLLFREQ1_N_M ; 
                                                            R0 = R0&~SYSCTL_PLL
                                                            FREQ1_N_M (limpar o
                                                             campo N)
  125 00000074 F100 0004       ADD              R0, R0, #(N<<SYSCTL_PLLFREQ1_N_



ARM Macro Assembler    Page 7 


S) 
                                                            ; R0 = R0 + (N<<SYS
                                                            CTL_PLLFREQ1_N_S) (
                                                            configurar N como d
                                                            efinido acima)
  126 00000078 6008            STR              R0, [R1]    ; [R1] = R0 (Q e N 
                                                            alteraram mas não e
                                                            stão fixados ainda)
                                                            
  127 0000007A 4942            LDR              R1, =SYSCTL_PLLFREQ0_R ; R1 = S
                                                            YSCTL_PLLFREQ0_R (p
                                                            onteiro)
  128 0000007C 6808            LDR              R0, [R1]    ; R0 = [R1] (valor)
                                                            
  129 0000007E F440 0000       ORR              R0, R0, #SYSCTL_PLLFREQ0_PLLPWR
 
                                                            ; R0 = R0|SYSCTL_PL
                                                            LFREQ0_PLLPWR (liga
                                                            r a energia para o 
                                                            PLL)
  130 00000082 6008            STR              R0, [R1]    ; [R1] = R0
  131 00000084 493B            LDR              R1, =SYSCTL_RSCLKCFG_R ; R1 = S
                                                            YSCTL_RSCLKCFG_R (p
                                                            onteiro)
  132 00000086 6808            LDR              R0, [R1]    ; R0 = [R1] (valor)
                                                            
  133 00000088 F040 4080       ORR              R0, R0, #SYSCTL_RSCLKCFG_NEWFRE
Q 
                                                            ; R0 = R0|SYSCTL_RS
                                                            CLKCFG_NEWFREQ (fix
                                                            ar as mudanças no r
                                                            egistrador)
  134 0000008C 6008            STR              R0, [R1]    ; [R1] = R0
  135 0000008E         ; 7) Escrever o registrador SYSCTL_MEMTIM0_R para a nova
                        configuração de clock.
  136 0000008E         ;    ************
  137 0000008E         ;    Configurar os parâmetros de tempo para as memórias 
                       Flash e EEPROM que 
  138 0000008E         ;    dependem da frequência do clock do sistema. Ver a T
                       abela 5-12 do datasheet.
  139 0000008E 4940            LDR              R1, =SYSCTL_MEMTIM0_R ; R1 = SY
                                                            SCTL_MEMTIM0_R (pon
                                                            teiro)
  140 00000090 6808            LDR              R0, [R1]    ; R0 = [R1] (valor)
                                                            
  141 00000092 4B40            LDR              R3, =0x03EF03EF ; R3 = 0x03EF03
                                                            EF (máscara)
  142 00000094 EA20 0003       BIC              R0, R0, R3  ; R0 = R0&~0x03EF03
                                                            EF (limpar os campo
                                                            s EBCHT, EBCE, EWS,
                                                             FBCHT, FBCE, e FWS
                                                             fields)
  143 00000098 4A3F            LDR              R2, =SYSCLK ; R2 = (FXTAL/(Q+1)
                                                            /(N+1))*(MINT+MFRAC
                                                            /1024)/(PSYSDIV+1)
  144 0000009A 4B40            LDR              R3, =120000000 ; R3 = 80,000,00
                                                            0 (value)
  145 0000009C 429A            CMP              R2, R3      ; é R2 (SysClk) <= 
                                                            R3 (120,000,000 Hz)



ARM Macro Assembler    Page 8 


                                                            ?
  146 0000009E D900            BLS              PLL_Init_step7fullspeed ; se si
                                                            m, pular o próximo 
                                                            teste
  147 000000A0         PLL_Init_step7toofast                ; 120 MHz < SysClk:
                                                             "too fast"
  148 000000A0         ; Um configuração é inválida e o PLL não pode operar mai
                       s rápido que 120MHz.
  149 000000A0         ; Pula o resto da inicialização, levando o sistema a ope
                       rar pelo MOSC
  150 000000A0         ; que é o cristal de 25MHz.
  151 000000A0 4770            BX               LR          ; retorna
  152 000000A2         PLL_Init_step7fullspeed              ; 100 MHz < SysClk 
                                                            <= 120 MHz: "full s
                                                            peed"
  153 000000A2 4B3F            LDR              R3, =100000000 ; R3 = 100,000,0
                                                            00 (valor)
  154 000000A4 429A            CMP              R2, R3      ; é R2 (SysClk) <= 
                                                            R3 (100,000,000 Hz)
                                                            ?
  155 000000A6 D902            BLS              PLL_Init_step7veryfast ; se sim
                                                            , pula o próximo te
                                                            ste
  156 000000A8 4B3E            LDR              R3, =0x01850185 ; R3 = 0x018501
                                                            85 (valores desloca
                                                            dos)
  157 000000AA 4418            ADD              R0, R0, R3  ; R0 = R0 + 0x01850
                                                            185 (FBCHT/EBCHT = 
                                                            6, FBCE/EBCE = 0, F
                                                            WS/EWS = 5)
  158 000000AC E01F            B                PLL_Init_step7done ; branch inc
                                                            ondicional para o f
                                                            im
  159 000000AE         PLL_Init_step7veryfast               ; 80 MHz < SysClk <
                                                            = 100 MHz: "very fa
                                                            st"
  160 000000AE 4B3A            LDR              R3, =80000000 ; R3 = 80,000,000
                                                             (valor)
  161 000000B0 429A            CMP              R2, R3      ; é R2 (SysClk) <= 
                                                            R3 (80,000,000 Hz)?
                                                            
  162 000000B2 D902            BLS              PLL_Init_step7fast ; se sim, pu
                                                            la o próximo teste
  163 000000B4 4B3C            LDR              R3, =0x01440144 ; R3 = 0x014401
                                                            44 (valores desloca
                                                            dos)
  164 000000B6 4418            ADD              R0, R0, R3  ; R0 = R0 + 0x01440
                                                            144 (FBCHT/EBCHT = 
                                                            5, FBCE/EBCE = 0, F
                                                            WS/EWS = 4)
  165 000000B8 E019            B                PLL_Init_step7done ; branch inc
                                                            ondicional para o f
                                                            im
  166 000000BA         PLL_Init_step7fast                   ; 60 MHz < SysClk <
                                                            = 80 MHz: "fast"
  167 000000BA 4B3C            LDR              R3, =60000000 ; R3 = 60,000,000
                                                             (valor)
  168 000000BC 429A            CMP              R2, R3      ; é R2 (SysClk) <= 
                                                            R3 (60,000,000 Hz)?



ARM Macro Assembler    Page 9 


                                                            
  169 000000BE D902            BLS              PLL_Init_step7medium ; se sim, 
                                                            pula o próximo test
                                                            e
  170 000000C0 4B3B            LDR              R3, =0x01030103 ; R3 = 0x010301
                                                            03 (valores desloca
                                                            dos)
  171 000000C2 4418            ADD              R0, R0, R3  ; R0 = R0 + 0x01030
                                                            103 (FBCHT/EBCHT = 
                                                            4, FBCE/EBCE = 0, F
                                                            WS/EWS = 3)
  172 000000C4 E013            B                PLL_Init_step7done ; branch inc
                                                            ondicional para o f
                                                            im
  173 000000C6         PLL_Init_step7medium                 ; 40 MHz < SysClk <
                                                            = 60 MHz: "medium"
  174 000000C6 4B3B            LDR              R3, =40000000 ; R3 = 40,000,000
                                                             (valor)
  175 000000C8 429A            CMP              R2, R3      ; é R2 (SysClk) <= 
                                                            R3 (40,000,000 Hz)?
                                                            
  176 000000CA D902            BLS              PLL_Init_step7slow ; se sim, pu
                                                            la o próximo teste
  177 000000CC F100 10C2       ADD              R0, R0, #0x00C200C2 ; R0 = R0 +
                                                             0x00C200C2 (FBCHT/
                                                            EBCHT = 3, FBCE/EBC
                                                            E = 0, FWS/EWS = 2)
                                                            
  178 000000D0 E00D            B                PLL_Init_step7done ; branch inc
                                                            ondicional para o f
                                                            im
  179 000000D2         PLL_Init_step7slow                   ; 16 MHz < SysClk <
                                                            = 40 MHz: "slow"
  180 000000D2 4B39            LDR              R3, =16000000 ; R3 = 16,000,000
                                                             (value)
  181 000000D4 429A            CMP              R2, R3      ; é R2 (SysClk) <= 
                                                            R3 (16,000,000 Hz)?
                                                            
  182 000000D6 D902            BLS              PLL_Init_step7veryslow ; se sim
                                                            , pula o próximo te
                                                            ste
  183 000000D8 F100 1081       ADD              R0, R0, #0x00810081 ; R0 = R0 +
                                                             0x00810081 (FBCHT/
                                                            EBCHT = 2, FBCE/EBC
                                                            E = 1, FWS/EWS = 1)
                                                            
  184 000000DC E007            B                PLL_Init_step7done ; branch inc
                                                            ondicional para o f
                                                            im
  185 000000DE         PLL_Init_step7veryslow               ; SysClk == 16 MHz:
                                                             "very slow"
  186 000000DE 4B36            LDR              R3, =16000000 ; R3 = 16,000,000
                                                             (value)
  187 000000E0 429A            CMP              R2, R3      ; é R2 (SysClk) < R
                                                            3 (16,000,000 Hz)?
  188 000000E2 D302            BLO              PLL_Init_step7extremelyslow ; s
                                                            e sim, pula o próxi
                                                            mo teste
  189 000000E4 F100 1020       ADD              R0, R0, #0x00200020 ; R0 = R0 +



ARM Macro Assembler    Page 10 


                                                             0x00200020 (FBCHT/
                                                            EBCHT = 0, FBCE/EBC
                                                            E = 1, FWS/EWS = 0)
                                                            
  190 000000E8 E001            B                PLL_Init_step7done ; branch inc
                                                            ondicional para o f
                                                            im
  191 000000EA         PLL_Init_step7extremelyslow          ; SysClk < 16 MHz: 
                                                            "extremely slow"
  192 000000EA F100 0000       ADD              R0, R0, #0x00000000 ; R0 = R0 +
                                                             0x00000000 (FBCHT/
                                                            EBCHT = 0, FBCE/EBC
                                                            E = 0, FWS/EWS = 0)
                                                            
  193 000000EE         PLL_Init_step7done
  194 000000EE 6008            STR              R0, [R1]    ; [R1] = R0 (SYSCTL
                                                            _MEMTIM0_R alterado
                                                             mas não fixado ain
                                                            da)
  195 000000F0         ; 8) Espera pelo registrador SYSCTL_PLLSTAT_R indicar qu
                       e o PLL atingiu travamento
  196 000000F0         ;    no novo ponto de operação (ou que um período de tim
                       eout passou e o travamento
  197 000000F0         ;    falhou, que no caso uma condição de erro existe e e
                       sta sequência é abandonada
  198 000000F0 4932            LDR              R1, =SYSCTL_PLLSTAT_R ; R1 = SY
                                                            SCTL_PLLSTAT_R (poi
                                                            nter)
  199 000000F2 F04F 0200       MOV              R2, #0      ; R2 = 0 (timeout c
                                                            ounter)
  200 000000F6 F64F 73FF       MOV              R3, #0xFFFF ; R3 = 0xFFFF (valu
                                                            e)
  201 000000FA         PLL_Init_step8loop
  202 000000FA 6808            LDR              R0, [R1]    ; R0 = [R1] (value)
                                                            
  203 000000FC F010 0001       ANDS             R0, R0, #SYSCTL_PLLSTAT_LOCK ; 
                                                            R0 = R0&SYSCTL_PLLS
                                                            TAT_LOCK
  204 00000100 D104            BNE              PLL_Init_step8done ; se (R0 != 
                                                            0), terminar pollin
                                                            g
  205 00000102 F102 0201       ADD              R2, R2, #1  ; R2 = R2 + 1 (incr
                                                            ementar o contador 
                                                            de timeout)
  206 00000106 429A            CMP              R2, R3      ; se (R2 < 0xFFFF),
                                                             continuar o pollin
                                                            g
  207 00000108 D3F7            BLO              PLL_Init_step8loop
  208 0000010A         ; O PLL nunca travou ou não está ligado.
  209 0000010A         ; Pular o resto da inicialização, levando o sistema ser 
                       clockado pelo MOSC,
  210 0000010A         ; que é um cristal de 25MHz.
  211 0000010A 4770            BX               LR          ; return
  212 0000010C         PLL_Init_step8done
  213 0000010C         ; 9)Escrever o valor do PSYSDIV no registrador SYSCTL_RS
                       CLKCFG_R, setar o bit USEPLL para
  214 0000010C         ;   ser habilitado e setar o bit MEMTIMU.
  215 0000010C 4919            LDR              R1, =SYSCTL_RSCLKCFG_R ; R1 = S
                                                            YSCTL_RSCLKCFG_R (p



ARM Macro Assembler    Page 11 


                                                            onteiro)
  216 0000010E 6808            LDR              R0, [R1]    ; R0 = [R1] (valor)
                                                            
  217 00000110 F240 33FF       LDR              R3, =SYSCTL_RSCLKCFG_PSYSDIV_M 
                                                            ; R3 = SYSCTL_RSCLK
                                                            CFG_PSYSDIV_M (masc
                                                            ara)
  218 00000114 EA20 0003       BIC              R0, R0, R3  ; R0 = R0&~SYSCTL_R
                                                            SCLKCFG_PSYSDIV_M (
                                                            limpar o campo PSYS
                                                            DIV)
  219 00000118 F100 0005       ADD              R0, R0, #(PSYSDIV&SYSCTL_RSCLKC
FG_PSYSDIV_M) 
                                                            ; R0 = R0 + (PSYSDI
                                                            V&SYSCTL_RSCLKCFG_P
                                                            SYSDIV_M) (configur
                                                            ar PSYSDIV como def
                                                            inido acima)
  220 0000011C F040 4000       ORR              R0, R0, #SYSCTL_RSCLKCFG_MEMTIM
U 
                                                            ; R0 = R0|SYSCTL_RS
                                                            CLKCFG_MEMTIMU (set
                                                            ar o bit MEMTIMU pa
                                                            ra atualizar os par
                                                            âmetros de temporiz
                                                            ação de memória)
  221 00000120 F040 5080       ORR              R0, R0, #SYSCTL_RSCLKCFG_USEPLL
 
                                                            ; R0 = R0|SYSCTL_RS
                                                            CLKCFG_USEPLL (seta
                                                            r o bit USEPLL para
                                                             pegar o clock do P
                                                            LL)
  222 00000124 6008            STR              R0, [R1]    ; [R1] = R0 (execuç
                                                            ão e acesso são sus
                                                            pensas enquanto as 
                                                            atualizações na tem
                                                            porização da memóri
                                                            a são atualizadas)
  223 00000126 4770            BX               LR          ; return
  224 00000128         
  225 00000128         
  226 00000128         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  227 00000128         ; SYSTICK
  228 00000128         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  229 00000128 E000E010 
                       NVIC_ST_CTRL_R
                               EQU              0xE000E010
  230 00000128 E000E014 
                       NVIC_ST_RELOAD_R
                               EQU              0xE000E014
  231 00000128 E000E018 
                       NVIC_ST_CURRENT_R
                               EQU              0xE000E018
  232 00000128         ; ------------------------------------------------------



ARM Macro Assembler    Page 12 


                       --------------------------------------------------------
                       ----------- 
  233 00000128                 EXPORT           SysTick_Init
  234 00000128                 EXPORT           SysTick_Wait1ms
  235 00000128         ;------------SysTick_Init------------
  236 00000128         ; Configura o sistema para utilizar o SysTick para delay
                       s
  237 00000128         ; Entrada: Nenhum
  238 00000128         ; Saída: Nenhum
  239 00000128         ; Modifica: R0, R1
  240 00000128         SysTick_Init
  241 00000128 4925            LDR              R1, =NVIC_ST_CTRL_R ; R1 = &NVI
                                                            C_ST_CTRL_R (pontei
                                                            ro)
  242 0000012A F04F 0000       MOV              R0, #0      ; desabilita Systic
                                                            k durante a configu
                                                            ração
  243 0000012E 6008            STR              R0, [R1]    ; escreve no endere
                                                            ço de memória do pe
                                                            riférico
  244 00000130 4924            LDR              R1, =NVIC_ST_RELOAD_R ; R1 = &N
                                                            VIC_ST_RELOAD_R (po
                                                            inteiro)
  245 00000132 F06F 407F       LDR              R0, =0x00FFFFFF ;    ; valor má
                                                            ximo de recarga 2^2
                                                            4 ticks
  246 00000136 6008            STR              R0, [R1]    ; escreve no endere
                                                            ço de memória do pe
                                                            riférico o NVIC_ST_
                                                            RELOAD_M
  247 00000138 4923            LDR              R1, =NVIC_ST_CURRENT_R ; R1 = &
                                                            NVIC_ST_CURRENT_R (
                                                            ponteiro)
  248 0000013A F04F 0000       MOV              R0, #0      ; qualquer escrita 
                                                            no endereço NVIC_ST
                                                            _CURRENT_R o limpa
  249 0000013E 6008            STR              R0, [R1]    ; limpa o contador
  250 00000140 491F            LDR              R1, =NVIC_ST_CTRL_R ; habilita 
                                                            o SysTick com o clo
                                                            ck do core
  251 00000142 F04F 0005       MOV              R0, #0x05   ; ENABLE | CLK_SRC
  252 00000146 6008            STR              R0, [R1]    ; Seta os bits de E
                                                            NABLE e CLK_SRC na 
                                                            memória
  253 00000148 4770            BX               LR
  254 0000014A         
  255 0000014A         ;------------SysTick_Wait------------
  256 0000014A         ; Atraso de tempo utilizando processador ocupado
  257 0000014A         ; Entrada: R0 -> parâmetro de delay em unidades do clock
                        do core (12.5ns)
  258 0000014A         ; Saída: Nenhum
  259 0000014A         ; Modifica: R0
  260 0000014A         SysTick_Wait
  261 0000014A B40A            PUSH             {R1, R3}    ; Salva os valores 
                                                            de R1 e R3 externos
                                                            
  262 0000014C 491D            LDR              R1, =NVIC_ST_RELOAD_R ; R1 = &N
                                                            VIC_ST_RELOAD_RSUB 
                                                            R0 (ponteiro)



ARM Macro Assembler    Page 13 


  263 0000014E F1A0 0001       SUB              R0, #1
  264 00000152 6008            STR              R0, [R1]    ; delay-1, número d
                                                            e contagens para es
                                                            perar
  265 00000154 491A            LDR              R1, =NVIC_ST_CTRL_R ; R1 = &NVI
                                                            C_ST_CTRL_R
  266 00000156         SysTick_Wait_loop
  267 00000156 680B            LDR              R3, [R1]    ; R3 = &NVIC_ST_CTR
                                                            L_R (ponteiro)
  268 00000158 F413 3380       ANDS             R3, R3, #0x00010000 ; O bit COU
                                                            NT está setado? (Bi
                                                            t 16)
  269 0000015C D0FB            BEQ              SysTick_Wait_loop ; Se sim perm
                                                            anece no loop
  270 0000015E BC0A            POP              {R1, R3}    ; Restaura
  271 00000160 4770            BX               LR          ; Se não, retorna
  272 00000162         
  273 00000162         ;------------SysTick_Wait1ms------------
  274 00000162         ; tempo de atraso usando processador ocupado. Assume um 
                       clock de 80 MHz
  275 00000162         ; Entrada: R0 --> Número de vezes para contar 1ms.
  276 00000162         ; Saída: Não tem
  277 00000162         ; Modifica: R0
  278 00000162 00013880 
                       DELAY1MS
                               EQU              80000       ; número de ciclos 
                                                            de clock para conta
                                                            r 1ms (assumindo 80
                                                             MHz)
  279 00000162         ; 80000 x 12,5 ns = 1 ms
  280 00000162         
  281 00000162         SysTick_Wait1ms
  282 00000162 B510            PUSH             {R4, LR}    ; salva o valor atu
                                                            al de R4 e Link Reg
                                                            ister
  283 00000164 0004            MOVS             R4, R0      ; R4 = R0  numEsper
                                                            asRestantes com atu
                                                            alização dos flags
  284 00000166 D004            BEQ              SysTick_Wait1ms_done ; Se o num
                                                            EsperasRestantes ==
                                                             0, vai para o fim
  285 00000168         SysTick_Wait1ms_loop
  286 00000168 4818            LDR              R0, =DELAY1MS ; R0 = DELAY1MS (
                                                            número de ticks par
                                                            a contar 1ms)
  287 0000016A F7FF FFEE       BL               SysTick_Wait ; chama a rotina p
                                                            ara esperar por 1ms
                                                            
  288 0000016E 1E64            SUBS             R4, R4, #1  ; R4 = R4 - 1; numE
                                                            sperasRestantes--
  289 00000170 D8FA            BHI              SysTick_Wait1ms_loop ; se (numE
                                                            sperasRestantes > 0
                                                            ), espera mais 1ms
  290 00000172         SysTick_Wait1ms_done
  291 00000172 BD10            POP              {R4, PC}    ;return
  292 00000174         
  293 00000174         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------



ARM Macro Assembler    Page 14 


  294 00000174         ; Fim do Arquivo
  295 00000174         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  296 00000174                 ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  297 00000174                 END                          ;Fim do arquivo
              400FE0B0 
              400FE07C 
              400FE050 
              400FE144 
              400FE160 
              000FFC00 
              400FE164 
              400FE0C0 
              03EF03EF 
              04C4B400 
              07270E00 
              05F5E100 
              01850185 
              01440144 
              03938700 
              01030103 
              02625A00 
              00F42400 
              400FE168 
              E000E010 
              E000E014 
              E000E018 
              00013880 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4.fp.sp 
--depend=.\objects\utils.d -o.\objects\utils.o -IC:\Users\mileny\AppData\Local\
Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL SETA 1
" --predefine="__UVISION_VERSION SETA 539" --predefine="TM4C1294NCPDT SETA 1" -
-list=.\listings\utils.lst utils.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 47 in file utils.s
   Uses
      None
Comment: .text unused
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 56 in file utils.s
   Uses
      At line 49 in file utils.s
Comment: PLL_Init used once
PLL_Init_step3loop 0000001A

Symbol: PLL_Init_step3loop
   Definitions
      At line 76 in file utils.s
   Uses
      At line 79 in file utils.s
Comment: PLL_Init_step3loop used once
PLL_Init_step7done 000000EE

Symbol: PLL_Init_step7done
   Definitions
      At line 193 in file utils.s
   Uses
      At line 158 in file utils.s
      At line 165 in file utils.s
      At line 172 in file utils.s
      At line 178 in file utils.s
      At line 184 in file utils.s
      At line 190 in file utils.s

PLL_Init_step7extremelyslow 000000EA

Symbol: PLL_Init_step7extremelyslow
   Definitions
      At line 191 in file utils.s
   Uses
      At line 188 in file utils.s
Comment: PLL_Init_step7extremelyslow used once
PLL_Init_step7fast 000000BA

Symbol: PLL_Init_step7fast
   Definitions
      At line 166 in file utils.s
   Uses
      At line 162 in file utils.s
Comment: PLL_Init_step7fast used once
PLL_Init_step7fullspeed 000000A2

Symbol: PLL_Init_step7fullspeed
   Definitions
      At line 152 in file utils.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 146 in file utils.s
Comment: PLL_Init_step7fullspeed used once
PLL_Init_step7medium 000000C6

Symbol: PLL_Init_step7medium
   Definitions
      At line 173 in file utils.s
   Uses
      At line 169 in file utils.s
Comment: PLL_Init_step7medium used once
PLL_Init_step7slow 000000D2

Symbol: PLL_Init_step7slow
   Definitions
      At line 179 in file utils.s
   Uses
      At line 176 in file utils.s
Comment: PLL_Init_step7slow used once
PLL_Init_step7toofast 000000A0

Symbol: PLL_Init_step7toofast
   Definitions
      At line 147 in file utils.s
   Uses
      None
Comment: PLL_Init_step7toofast unused
PLL_Init_step7veryfast 000000AE

Symbol: PLL_Init_step7veryfast
   Definitions
      At line 159 in file utils.s
   Uses
      At line 155 in file utils.s
Comment: PLL_Init_step7veryfast used once
PLL_Init_step7veryslow 000000DE

Symbol: PLL_Init_step7veryslow
   Definitions
      At line 185 in file utils.s
   Uses
      At line 182 in file utils.s
Comment: PLL_Init_step7veryslow used once
PLL_Init_step8done 0000010C

Symbol: PLL_Init_step8done
   Definitions
      At line 212 in file utils.s
   Uses
      At line 204 in file utils.s
Comment: PLL_Init_step8done used once
PLL_Init_step8loop 000000FA

Symbol: PLL_Init_step8loop
   Definitions
      At line 201 in file utils.s
   Uses
      At line 207 in file utils.s
Comment: PLL_Init_step8loop used once
SysTick_Init 00000128



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Symbol: SysTick_Init
   Definitions
      At line 240 in file utils.s
   Uses
      At line 233 in file utils.s
Comment: SysTick_Init used once
SysTick_Wait 0000014A

Symbol: SysTick_Wait
   Definitions
      At line 260 in file utils.s
   Uses
      At line 287 in file utils.s
Comment: SysTick_Wait used once
SysTick_Wait1ms 00000162

Symbol: SysTick_Wait1ms
   Definitions
      At line 281 in file utils.s
   Uses
      At line 234 in file utils.s
Comment: SysTick_Wait1ms used once
SysTick_Wait1ms_done 00000172

Symbol: SysTick_Wait1ms_done
   Definitions
      At line 290 in file utils.s
   Uses
      At line 284 in file utils.s
Comment: SysTick_Wait1ms_done used once
SysTick_Wait1ms_loop 00000168

Symbol: SysTick_Wait1ms_loop
   Definitions
      At line 285 in file utils.s
   Uses
      At line 289 in file utils.s
Comment: SysTick_Wait1ms_loop used once
SysTick_Wait_loop 00000156

Symbol: SysTick_Wait_loop
   Definitions
      At line 266 in file utils.s
   Uses
      At line 269 in file utils.s
Comment: SysTick_Wait_loop used once
20 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DELAY1MS 00013880

Symbol: DELAY1MS
   Definitions
      At line 278 in file utils.s
   Uses
      At line 286 in file utils.s
Comment: DELAY1MS used once
FXTAL 017D7840

Symbol: FXTAL
   Definitions
      At line 103 in file utils.s
   Uses
      At line 109 in file utils.s
Comment: FXTAL used once
MFRAC 00000000

Symbol: MFRAC
   Definitions
      At line 107 in file utils.s
   Uses
      At line 109 in file utils.s
      At line 114 in file utils.s

MINT 00000060

Symbol: MINT
   Definitions
      At line 106 in file utils.s
   Uses
      At line 109 in file utils.s
      At line 118 in file utils.s

N 00000004

Symbol: N
   Definitions
      At line 105 in file utils.s
   Uses
      At line 109 in file utils.s
      At line 125 in file utils.s

NVIC_ST_CTRL_R E000E010

Symbol: NVIC_ST_CTRL_R
   Definitions
      At line 229 in file utils.s
   Uses
      At line 241 in file utils.s
      At line 250 in file utils.s
      At line 265 in file utils.s

NVIC_ST_CURRENT_R E000E018

Symbol: NVIC_ST_CURRENT_R
   Definitions
      At line 231 in file utils.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 247 in file utils.s
Comment: NVIC_ST_CURRENT_R used once
NVIC_ST_RELOAD_R E000E014

Symbol: NVIC_ST_RELOAD_R
   Definitions
      At line 230 in file utils.s
   Uses
      At line 244 in file utils.s
      At line 262 in file utils.s

PSYSDIV 00000005

Symbol: PSYSDIV
   Definitions
      At line 13 in file utils.s
   Uses
      At line 109 in file utils.s
      At line 219 in file utils.s

Q 00000000

Symbol: Q
   Definitions
      At line 104 in file utils.s
   Uses
      At line 109 in file utils.s
      At line 123 in file utils.s

SYSCLK 04C4B400

Symbol: SYSCLK
   Definitions
      At line 109 in file utils.s
   Uses
      At line 143 in file utils.s
Comment: SYSCLK used once
SYSCTL_DSCLKCFG_DSOSCSRC_M 00F00000

Symbol: SYSCTL_DSCLKCFG_DSOSCSRC_M
   Definitions
      At line 31 in file utils.s
   Uses
      At line 94 in file utils.s
Comment: SYSCTL_DSCLKCFG_DSOSCSRC_M used once
SYSCTL_DSCLKCFG_DSOSCSRC_MOSC 00300000

Symbol: SYSCTL_DSCLKCFG_DSOSCSRC_MOSC
   Definitions
      At line 32 in file utils.s
   Uses
      At line 95 in file utils.s
Comment: SYSCTL_DSCLKCFG_DSOSCSRC_MOSC used once
SYSCTL_DSCLKCFG_R 400FE144

Symbol: SYSCTL_DSCLKCFG_R
   Definitions
      At line 30 in file utils.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 92 in file utils.s
Comment: SYSCTL_DSCLKCFG_R used once
SYSCTL_MEMTIM0_R 400FE0C0

Symbol: SYSCTL_MEMTIM0_R
   Definitions
      At line 29 in file utils.s
   Uses
      At line 139 in file utils.s
Comment: SYSCTL_MEMTIM0_R used once
SYSCTL_MOSCCTL_NOXTAL 00000004

Symbol: SYSCTL_MOSCCTL_NOXTAL
   Definitions
      At line 19 in file utils.s
   Uses
      At line 70 in file utils.s
Comment: SYSCTL_MOSCCTL_NOXTAL used once
SYSCTL_MOSCCTL_PWRDN 00000008

Symbol: SYSCTL_MOSCCTL_PWRDN
   Definitions
      At line 18 in file utils.s
   Uses
      At line 71 in file utils.s
Comment: SYSCTL_MOSCCTL_PWRDN used once
SYSCTL_MOSCCTL_R 400FE07C

Symbol: SYSCTL_MOSCCTL_R
   Definitions
      At line 17 in file utils.s
   Uses
      At line 68 in file utils.s
Comment: SYSCTL_MOSCCTL_R used once
SYSCTL_PLLFREQ0_MFRAC_M 000FFC00

Symbol: SYSCTL_PLLFREQ0_MFRAC_M
   Definitions
      At line 35 in file utils.s
   Uses
      At line 112 in file utils.s
Comment: SYSCTL_PLLFREQ0_MFRAC_M used once
SYSCTL_PLLFREQ0_MFRAC_S 0000000A

Symbol: SYSCTL_PLLFREQ0_MFRAC_S
   Definitions
      At line 37 in file utils.s
   Uses
      At line 114 in file utils.s
Comment: SYSCTL_PLLFREQ0_MFRAC_S used once
SYSCTL_PLLFREQ0_MINT_M 000003FF

Symbol: SYSCTL_PLLFREQ0_MINT_M
   Definitions
      At line 36 in file utils.s
   Uses
      At line 116 in file utils.s
Comment: SYSCTL_PLLFREQ0_MINT_M used once
SYSCTL_PLLFREQ0_MINT_S 00000000



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols


Symbol: SYSCTL_PLLFREQ0_MINT_S
   Definitions
      At line 38 in file utils.s
   Uses
      At line 118 in file utils.s
Comment: SYSCTL_PLLFREQ0_MINT_S used once
SYSCTL_PLLFREQ0_PLLPWR 00800000

Symbol: SYSCTL_PLLFREQ0_PLLPWR
   Definitions
      At line 34 in file utils.s
   Uses
      At line 129 in file utils.s
Comment: SYSCTL_PLLFREQ0_PLLPWR used once
SYSCTL_PLLFREQ0_R 400FE160

Symbol: SYSCTL_PLLFREQ0_R
   Definitions
      At line 33 in file utils.s
   Uses
      At line 110 in file utils.s
      At line 127 in file utils.s

SYSCTL_PLLFREQ1_N_M 0000001F

Symbol: SYSCTL_PLLFREQ1_N_M
   Definitions
      At line 41 in file utils.s
   Uses
      At line 124 in file utils.s
Comment: SYSCTL_PLLFREQ1_N_M used once
SYSCTL_PLLFREQ1_N_S 00000000

Symbol: SYSCTL_PLLFREQ1_N_S
   Definitions
      At line 43 in file utils.s
   Uses
      At line 125 in file utils.s
Comment: SYSCTL_PLLFREQ1_N_S used once
SYSCTL_PLLFREQ1_Q_M 00001F00

Symbol: SYSCTL_PLLFREQ1_Q_M
   Definitions
      At line 40 in file utils.s
   Uses
      At line 122 in file utils.s
Comment: SYSCTL_PLLFREQ1_Q_M used once
SYSCTL_PLLFREQ1_Q_S 00000008

Symbol: SYSCTL_PLLFREQ1_Q_S
   Definitions
      At line 42 in file utils.s
   Uses
      At line 123 in file utils.s
Comment: SYSCTL_PLLFREQ1_Q_S used once
SYSCTL_PLLFREQ1_R 400FE164

Symbol: SYSCTL_PLLFREQ1_R



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 39 in file utils.s
   Uses
      At line 120 in file utils.s
Comment: SYSCTL_PLLFREQ1_R used once
SYSCTL_PLLSTAT_LOCK 00000001

Symbol: SYSCTL_PLLSTAT_LOCK
   Definitions
      At line 45 in file utils.s
   Uses
      At line 203 in file utils.s
Comment: SYSCTL_PLLSTAT_LOCK used once
SYSCTL_PLLSTAT_R 400FE168

Symbol: SYSCTL_PLLSTAT_R
   Definitions
      At line 44 in file utils.s
   Uses
      At line 198 in file utils.s
Comment: SYSCTL_PLLSTAT_R used once
SYSCTL_RIS_MOSCPUPRIS 00000100

Symbol: SYSCTL_RIS_MOSCPUPRIS
   Definitions
      At line 16 in file utils.s
   Uses
      At line 78 in file utils.s
Comment: SYSCTL_RIS_MOSCPUPRIS used once
SYSCTL_RIS_R 400FE050

Symbol: SYSCTL_RIS_R
   Definitions
      At line 15 in file utils.s
   Uses
      At line 75 in file utils.s
Comment: SYSCTL_RIS_R used once
SYSCTL_RSCLKCFG_MEMTIMU 80000000

Symbol: SYSCTL_RSCLKCFG_MEMTIMU
   Definitions
      At line 21 in file utils.s
   Uses
      At line 220 in file utils.s
Comment: SYSCTL_RSCLKCFG_MEMTIMU used once
SYSCTL_RSCLKCFG_NEWFREQ 40000000

Symbol: SYSCTL_RSCLKCFG_NEWFREQ
   Definitions
      At line 22 in file utils.s
   Uses
      At line 133 in file utils.s
Comment: SYSCTL_RSCLKCFG_NEWFREQ used once
SYSCTL_RSCLKCFG_OSCSRC_M 00F00000

Symbol: SYSCTL_RSCLKCFG_OSCSRC_M
   Definitions
      At line 26 in file utils.s
   Uses



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

      At line 85 in file utils.s
Comment: SYSCTL_RSCLKCFG_OSCSRC_M used once
SYSCTL_RSCLKCFG_OSCSRC_MOSC 00300000

Symbol: SYSCTL_RSCLKCFG_OSCSRC_MOSC
   Definitions
      At line 27 in file utils.s
   Uses
      At line 86 in file utils.s
Comment: SYSCTL_RSCLKCFG_OSCSRC_MOSC used once
SYSCTL_RSCLKCFG_PLLSRC_M 0F000000

Symbol: SYSCTL_RSCLKCFG_PLLSRC_M
   Definitions
      At line 24 in file utils.s
   Uses
      At line 87 in file utils.s
Comment: SYSCTL_RSCLKCFG_PLLSRC_M used once
SYSCTL_RSCLKCFG_PLLSRC_MOSC 03000000

Symbol: SYSCTL_RSCLKCFG_PLLSRC_MOSC
   Definitions
      At line 25 in file utils.s
   Uses
      At line 88 in file utils.s
Comment: SYSCTL_RSCLKCFG_PLLSRC_MOSC used once
SYSCTL_RSCLKCFG_PSYSDIV_M 000003FF

Symbol: SYSCTL_RSCLKCFG_PSYSDIV_M
   Definitions
      At line 28 in file utils.s
   Uses
      At line 217 in file utils.s
      At line 219 in file utils.s

SYSCTL_RSCLKCFG_R 400FE0B0

Symbol: SYSCTL_RSCLKCFG_R
   Definitions
      At line 20 in file utils.s
   Uses
      At line 61 in file utils.s
      At line 83 in file utils.s
      At line 131 in file utils.s
      At line 215 in file utils.s

SYSCTL_RSCLKCFG_USEPLL 10000000

Symbol: SYSCTL_RSCLKCFG_USEPLL
   Definitions
      At line 23 in file utils.s
   Uses
      At line 63 in file utils.s
      At line 221 in file utils.s

42 symbols
398 symbols in table
